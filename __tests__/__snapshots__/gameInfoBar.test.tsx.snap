// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`GameInfoBar renders 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "justifyContent": "space-between",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />
  <View
    style={
      {
        "justifyContent": "space-around",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 45,
          },
          {
            "color": "#1C274C",
          },
        ]
      }
    >
      Score: 
      0
    </Text>
    <Text
      style={
        [
          {
            "fontSize": 45,
          },
          {
            "color": "#1C274C",
          },
        ]
      }
    >
      Undo Count: 
      0
    </Text>
  </View>
  <View
    style={
      [
        {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="undoButton"
    >
      <view />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="resetButton"
    >
      <view />
    </View>
  </View>
</View>
`;

exports[`score displays and updates correctly 1`] = `
<View
  style={
    {
      "flexDirection": "row",
      "justifyContent": "space-between",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />
  <View
    style={
      {
        "justifyContent": "space-around",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 45,
          },
          {
            "color": "#1C274C",
          },
        ]
      }
    >
      Score: 
      40200
    </Text>
    <Text
      style={
        [
          {
            "fontSize": 45,
          },
          {
            "color": "#1C274C",
          },
        ]
      }
    >
      Undo Count: 
      0
    </Text>
  </View>
  <View
    style={
      [
        {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="undoButton"
    >
      <view />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="resetButton"
    >
      <view />
    </View>
  </View>
</View>
`;

exports[`score displays and updates correctly 2`] = `
<View
  style={
    {
      "flexDirection": "row",
      "justifyContent": "space-between",
    }
  }
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onRequestClose={[Function]}
    transparent={true}
    visible={false}
  />
  <View
    style={
      {
        "justifyContent": "space-around",
      }
    }
  >
    <Text
      style={
        [
          {
            "fontSize": 45,
          },
          {
            "color": "#1C274C",
          },
        ]
      }
    >
      Score: 
      40300
    </Text>
    <Text
      style={
        [
          {
            "fontSize": 45,
          },
          {
            "color": "#1C274C",
          },
        ]
      }
    >
      Undo Count: 
      0
    </Text>
  </View>
  <View
    style={
      [
        {
          "flexDirection": "row",
          "justifyContent": "flex-end",
        },
      ]
    }
  >
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="undoButton"
    >
      <view />
    </View>
    <View
      accessibilityState={
        {
          "busy": undefined,
          "checked": undefined,
          "disabled": undefined,
          "expanded": undefined,
          "selected": undefined,
        }
      }
      accessibilityValue={
        {
          "max": undefined,
          "min": undefined,
          "now": undefined,
          "text": undefined,
        }
      }
      accessible={true}
      collapsable={false}
      focusable={true}
      onBlur={[Function]}
      onClick={[Function]}
      onFocus={[Function]}
      onResponderGrant={[Function]}
      onResponderMove={[Function]}
      onResponderRelease={[Function]}
      onResponderTerminate={[Function]}
      onResponderTerminationRequest={[Function]}
      onStartShouldSetResponder={[Function]}
      testID="resetButton"
    >
      <view />
    </View>
  </View>
</View>
`;
